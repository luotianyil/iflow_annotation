<?php

namespace iflow\annotation\lib\utils\tools\Data;

#[\Attribute]
class Inject extends Value {

    /**
     * 获取当前值是否存在并按照类型生成新的值
     * @param \ReflectionParameter|\ReflectionProperty $ref
     * @param object|null $object
     * @param array $args
     * @return mixed
     * @throws \ReflectionException
     */
    public function getValue(\ReflectionProperty|\ReflectionParameter $ref, object|null $object = null, array &$args = []): mixed {
        $value = parent::getValue($ref, $object, $args); // TODO: Change the autogenerated stub
        if (!$value) {
            $types = annotation_instance()->getParameterType($ref);
            if (count($types) > 0 && class_exists($types[0])) {
                $value = annotation_instance($types[0]);
            }
        }
        return $value;
    }
}